version: '3'
services:
  environment:
    image: 'diwise/api-environment:latest'
    build:
      context: ..
      dockerfile: ./deployments/Dockerfile
    restart: always
    depends_on:
      - postgresdb
    environment:
      DIWISE_SQLDB_HOST: 'postgresdb'
      DIWISE_SQLDB_USER: 'testuser'
      DIWISE_SQLDB_NAME: 'environment'
      DIWISE_SQLDB_PASSWORD: 'testpass'
      DIWISE_SQLDB_SSLMODE: 'disable'
      SERVICE_PORT: '8090'
      
    ports:
      - '8090'

  contextbroker:
    image: 'ghcr.io/diwise/api-snowdepth:prod-d1d9b09c10baad2dbf0b15fd83a1562a6c74b89f'
    restart: always
    depends_on:
      - postgresdb
    environment:
      SNOWDEPTH_DB_HOST: 'postgresdb'
      SNOWDEPTH_DB_USER: 'testuser'
      SNOWDEPTH_DB_NAME: 'environment'
      SNOWDEPTH_DB_PASSWORD: 'testpass'
      SNOWDEPTH_DB_SSLMODE: 'disable'
      SNOWDEPTH_API_PORT: '8282'
      NGSI_CTX_SRC_ENVIRONMENT: 'http://environment:8090'
      RABBITMQ_DISABLED: 'true'
      
    ports:
      - '8282:8282'

  ingress:
    image: 'ghcr.io/diwise/ingress-mqtt@sha256:b23914b02df53c9e8dd98502487a096c2425a25ee0af92481f062a4473ce21d3'
    restart: always
    depends_on:
      - contextbroker
    environment:
      MQTT_HOST: $MQTT_HOST
      MQTT_PORT: $MQTT_PORT
      MQTT_TOPIC_0: $MQTT_TOPIC_0
      MQTT_USER: $MQTT_USER
      MQTT_PASSWORD: $MQTT_PASSWORD
      DIWISE_CONTEXT_BROKER_URL: 'http://contextbroker:8282'

  postgresdb:
    image: 'ghcr.io/diwise/test-db-postgresql:prod-824e7cffd65dd3766c88441a48cffd5b2acd55f2'
    restart: always
    environment:
      POSTGRES_DB: 'environment'
      POSTGRES_USER: 'testuser'
      POSTGRES_PASSWORD: 'testpass'
    ports:
      - '5432'